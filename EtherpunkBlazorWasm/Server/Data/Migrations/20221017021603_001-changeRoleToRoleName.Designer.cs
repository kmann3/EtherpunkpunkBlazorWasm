// <auto-generated />
using System;
using EtherpunkBlazorWasm.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EtherpunkBlazorWasm.Server.Data.Migrations
{
    [DbContext(typeof(EpunkDbContext))]
    [Migration("20221017021603_001-changeRoleToRoleName")]
    partial class _001changeRoleToRoleName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("EtherpunkBlazorWasm.Server.Data.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fae64def-afb0-4669-9a0a-c37c839c6578"),
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("EtherpunkBlazorWasm.Server.Data.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("99cd8f1d-9d6a-4e36-938e-63f8336393ee"),
                            CreatedOn = new DateTime(2022, 10, 17, 2, 16, 2, 555, DateTimeKind.Utc).AddTicks(6406),
                            Email = "admin@admin.com",
                            PasswordHash = "$2b$12$k87L/MF28Q673VKh8/cPi.pNe6atmnYcCQXfH80DwODOUtvUgB1NK"
                        },
                        new
                        {
                            Id = new Guid("c98d8b02-2064-44da-baa3-69be0de43295"),
                            CreatedOn = new DateTime(2022, 10, 17, 2, 16, 2, 815, DateTimeKind.Utc).AddTicks(2652),
                            Email = "regularuser1@user.com",
                            PasswordHash = "$2b$12$k87L/MF28Q673VKh8/cPi.pNe6atmnYcCQXfH80DwODOUtvUgB1NK"
                        },
                        new
                        {
                            Id = new Guid("69d4fdad-c18f-48e2-8fb3-2f2a5926ada3"),
                            CreatedOn = new DateTime(2022, 10, 17, 2, 16, 3, 75, DateTimeKind.Utc).AddTicks(1293),
                            Email = "regularuser2@user.com",
                            PasswordHash = "$2b$12$k87L/MF28Q673VKh8/cPi.pNe6atmnYcCQXfH80DwODOUtvUgB1NK"
                        });
                });

            modelBuilder.Entity("EtherpunkBlazorWasm.Server.Data.Entities.AppUserRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("fae64def-afb0-4669-9a0a-c37c839c6578"),
                            UserId = new Guid("99cd8f1d-9d6a-4e36-938e-63f8336393ee")
                        });
                });

            modelBuilder.Entity("EtherpunkBlazorWasm.Server.Data.Entities.AppUserRole", b =>
                {
                    b.HasOne("EtherpunkBlazorWasm.Server.Data.Entities.AppRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EtherpunkBlazorWasm.Server.Data.Entities.AppUser", "User")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EtherpunkBlazorWasm.Server.Data.Entities.AppRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EtherpunkBlazorWasm.Server.Data.Entities.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
