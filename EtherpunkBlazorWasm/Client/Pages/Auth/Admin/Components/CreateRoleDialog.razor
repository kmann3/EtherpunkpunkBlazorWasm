@inject HttpClient Http
@inject IJSRuntime jsr

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
   <div class="modal-dialog">
      <div class="modal-content">
         <div class="modal-header">
            <h4 class="modal-title">Create Role</h4>
            <button type="button" class="close"
               @onclick="@Cancel">&times;</button>
         </div>
         <div class="modal-body">
            <p>Name of new role</p>
            <InputText id="name" @bind-Value="returnData.RoleName" @onkeydown="@KeyAction" />
         </div>
         <div class="modal-footer">
            <button type="button" class="btn btn-primary" @onclick=@Ok>Create</button>
                <button type="button" class="btn btn-primary" @onclick="@Cancel">Cancel</button>
         </div>
      </div>
   </div>
</div>

@code {
    [Parameter] public EventCallback<ReturnAction> OnClose { get; set; }

    private ReturnAction returnData = new();

    private async Task Cancel()
    {
        returnData.DidCancel = true;
        await OnClose.InvokeAsync(returnData);
    }

    private async Task Ok()
    {
        var response = await Client.Auth.ApiHandler.PostApiDataAsync<string, Guid>("api/auth/createRole", returnData.RoleName, jsr, Http);

        if (response.HttpResponse?.IsSuccessStatusCode != true || response.Data == Guid.Empty)
        {
            returnData.WasSuccess = false;
        } else
        {
            returnData.RoleId = response.Data;
            returnData.WasSuccess = true;
        }

        await OnClose.InvokeAsync(returnData);
    }

    public void KeyAction(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" || e.Key == "NumpadEnter")
        {
            Ok();
        }
        else if (e.Key == "Escape")
        {
            Cancel();
        }
    }

    public class ReturnAction
    {
        public bool DidCancel { get; set; } = false;
        public Guid RoleId { get; set; } = Guid.Empty;
        public string RoleName { get; set; } = String.Empty;
        public bool WasSuccess { get; set; } = false;
    }
}